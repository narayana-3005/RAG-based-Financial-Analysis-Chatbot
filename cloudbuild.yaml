steps:
  # Step 1: Set up the Python environment and install dependencies
  - name: 'python:3.9'
    id: 'Install Dependencies'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        pip install -r requirements.txt
        pip install mlflow google-cloud-storage

  # Step 2: Retrieve raw data from GCP bucket
  - name: 'google/cloud-sdk:slim'
    id: 'Retrieve Data'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gsutil cp gs://stock_prices_bucket/*.parquet ./data/
        gsutil cp gs://news_articles_bucket/*.parquet ./data/

  # Step 3: Preprocess data using scripts from Data-Pipeline
  - name: 'python:3.9'
    id: 'Preprocess Data'
    entrypoint: 'python'
    args:
      - 'Data-Pipeline/scripts/preprocess.py'

  # Step 4: Train the model
  - name: 'python:3.9'
    id: 'Train Model'
    entrypoint: 'python'
    args:
      - 'Model_Pipeline/ml_ops_model.py'

  # Step 5: Run bias detection
  - name: 'python:3.9'
    id: 'Bias Detection'
    entrypoint: 'python'
    args:
      - 'Model_Pipeline/bias_detection.py'

  # Step 6: Log results and metrics to MLflow
  - name: 'python:3.9'
    id: 'Log to MLflow'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        export MLFLOW_TRACKING_URI='http://127.0.0.1:5001'
        python Model_Pipeline/log_to_mlflow.py

  # Step 7: Store the best model in GCP bucket
  - name: 'google/cloud-sdk:slim'
    id: 'Store Best Model'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gsutil cp ./Model_Pipeline/models/best_model.pkl gs://mlflow_connection_bucket

  # Step 8: Run tests for model validation
  - name: 'python:3.9'
    id: 'Run Tests'
    entrypoint: 'python'
    args:
      - 'tests/test_model.py'

  # Step 9: Deploy the application to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Deploy to Cloud Run'
    args:
      - 'run'
      - 'deploy'
      - 'rag-financial-chatbot'
      - '--source=.'
      - '--platform=managed'
      - '--region=us-central1'
      - '--allow-unauthenticated'

timeout: '1800s'

artifacts:
  objects:
    location: 'gs://mlflow_connection_bucket'
    paths:
      - 'Model_Pipeline/models/**'
      - 'logs/**'

substitutions:
  _MLFLOW_TRACKING_URI: 'http://127.0.0.:5001'
